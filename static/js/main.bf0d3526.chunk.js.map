{"version":3,"sources":["assets/carousel/52146404_2285307134836439_8626864219754594304_n.jpg","assets/carousel/52263511_2128793170500870_6200383275777654784_n.png","assets/carousel/52347519_235610323913102_42497528867848192_n.jpg","assets/carousel/52599222_284619915538111_6737127718170656768_n.jpg","components/Carousel.js","components/pages/MainPage.js","components/pages/CarouselPage.js","components/Todo.js","components/pages/TodoPage.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","rotateInterval","angle","MainPage","react_default","a","createElement","Link","to","Component","Carousel","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRotating","rotationAngle","box","React","createRef","handleRotate","bind","assertThisInitialized","toggleCarousel","clearInterval","console","log","concat","current","setTimeout","style","transform","transition","setInterval","e","setState","target","className","ref","src","edo1","alt","onClick","data-image-index","edo2","edo3","edo4","CarouselPage","components_Carousel","Todo","props","input","messages","handleChange","submitMessage","value","toConsumableArray","onChange","map","message","key","TodoPage","components_Todo","Navbar","Footer","href","App","BrowserRouter","components_Navbar","Route","exact","path","component","DisplayMessagesPage","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf0d3526.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/52146404_2285307134836439_8626864219754594304_n.005bbf32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/52263511_2128793170500870_6200383275777654784_n.e76aabd4.png\";","module.exports = __webpack_public_path__ + \"static/media/52347519_235610323913102_42497528867848192_n.dac939a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/52599222_284619915538111_6737127718170656768_n.66f9d3dd.jpg\";","import React, { Component } from 'react';\r\nimport '../css/carousel.css';\r\n\r\nimport edo1 from '../assets/carousel/52146404_2285307134836439_8626864219754594304_n.jpg';\r\nimport edo2 from '../assets/carousel/52263511_2128793170500870_6200383275777654784_n.png';\r\nimport edo3 from '../assets/carousel/52347519_235610323913102_42497528867848192_n.jpg';\r\nimport edo4 from '../assets/carousel/52599222_284619915538111_6737127718170656768_n.jpg';\r\n\r\nlet rotateInterval, angle, firstRotate;\r\n\r\nclass Carousel extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isRotating: true,\r\n            rotationAngle: 90\r\n        }\r\n        this.box = React.createRef();\r\n        this.handleRotate = this.handleRotate.bind(this);\r\n        this.toggleCarousel = this.toggleCarousel.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleRotate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleRotate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(rotateInterval);\r\n    }\r\n\r\n    handleRotate() {\r\n        angle = this.state.rotationAngle;\r\n        console.log(`Angle before interval: ${angle}`);\r\n        if(this.state.isRotating) {\r\n            let box = this.box.current;\r\n            firstRotate = setTimeout(function() {\r\n                console.log(`Angle while timeout: ${angle}`);\r\n                box.style.transform = `rotateY(${angle}deg)`;\r\n                box.style.transition = 'transform 2.5s ease'\r\n                angle += 90;\r\n            }, 500)\r\n            rotateInterval = setInterval(function() {\r\n                console.log(`Angle while interval: ${angle}`);\r\n                box.style.transform = `rotateY(${angle}deg)`;\r\n                box.style.transition = 'transform 3s ease'\r\n                angle += 90;\r\n        }, 4500)\r\n        } else {\r\n            clearInterval(rotateInterval);\r\n        }\r\n    }\r\n\r\n    toggleCarousel(e) {\r\n        this.setState({\r\n            isRotating: !this.state.isRotating,\r\n            rotationAngle: angle\r\n        })\r\n        if (this.state.isRotating) {\r\n            //TODO: \r\n            //1. Navigate to clicked image (code below dosen't work)! \r\n            //2. Add arrows to change images!\r\n            //3. Fix positioning\r\n            //4. Remove ale console.log()\r\n\r\n            // let box = this.box.current;\r\n            // box.style.transform = `rotateY(${angle + (e.target.dataset.imageIndex * 90)}deg)`;\r\n            // box.style.transition = 'transform 2.5s ease'\r\n            // angle += e.target.dataset.imageIndex * 90;\r\n            e.target.style.transform = 'translateX(-50%) translateY(-50%) scale(1.5)';\r\n            e.target.style.transition = 'transform .5s ease-in';\r\n        } else {\r\n            e.target.style.transform = 'translateX(-50%) translateY(-50%) scale(1)';\r\n            e.target.style.transition = 'transform .5s ease-in';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"rotating-box\">\r\n                    <div className=\"rotating-box__rb\" ref={this.box}>\r\n                        <div className=\"rotating-box__front\"><img src={edo1} alt=\"edo-photo1\" onClick={this.toggleCarousel} data-image-index={0} /></div>\r\n                        <div className=\"rotating-box__back\"><img src={edo2} alt=\"edo-photo2\" onClick={this.toggleCarousel} data-image-index={1} /></div>\r\n                        <div className=\"rotating-box__left\"><img src={edo3} alt=\"edo-photo3\" onClick={this.toggleCarousel} data-image-index={2} /></div>\r\n                        <div className=\"rotating-box__right\"><img src={edo4} alt=\"edo-photo4\" onClick={this.toggleCarousel} data-image-index={3}/></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MainPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This is only my testing page. To see some cool stuff in REACT click one of buttons below.</h2>\r\n                <Link to=\"/todo\">\r\n                    <button> Go to simple TODO list </button>\r\n                </Link>\r\n                <Link to=\"/carousel\">\r\n                    <button> Go to React Carousel </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Carousel from '../Carousel';\r\n\r\nclass CarouselPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This is React Carousel. Click on img to see more cool stuff.</h2>\r\n                <Carousel />\r\n                <Link to=\"/\">\r\n                    <button> Back to main page </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CarouselPage;","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        input: '',\r\n        messages: []\r\n      }\r\n      this.input = React.createRef()\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.submitMessage = this.submitMessage.bind(this);\r\n    }\r\n    // add handleChange() and submitMessage() methods here\r\n    handleChange(e) {\r\n      this.setState({\r\n        input: e.target.value\r\n      })\r\n    }\r\n  \r\n    submitMessage() {\r\n      this.setState({\r\n        messages: [...this.state.messages, this.state.input]\r\n      }, function() {\r\n        this.input.current.value = ''\r\n        this.setState({\r\n          input: ''\r\n        })\r\n      })\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2>Type in a new Message:</h2>\r\n          <input onChange={this.handleChange} ref={this.input}/>\r\n          <button onClick={this.submitMessage}>Add message</button>\r\n          <ul>{this.state.messages.map(message => <li key={message}>{message}</li>)}</ul>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default Todo;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Todo from '../Todo';\r\n\r\nclass TodoPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This is simple react TODO list. Type any todo task and hit the button.</h2>\r\n                <Todo />\r\n                <Link to=\"/\">\r\n                    <button> Back to main page </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../css/navbar.css';\r\n\r\nclass Navbar extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"navbar-flex\">\r\n                <Link to=\"/\">\r\n                    HOME\r\n                </Link>\r\n                <Link to=\"/todo\">\r\n                    TODO\r\n                </Link>\r\n                <Link to=\"/carousel\">\r\n                    CAROSUEL\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nimport '../css/footer.css';\r\n\r\nclass Footer extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"footer-flex\">\r\n                <h3>THIS IS <a href=\"https://github.com/Fjollsfinn\">FJOLLSFINN</a> TESTING PAGE.</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\n\nimport MainPage from './components/pages/MainPage';\nimport CarouselPage from './components/pages/CarouselPage';\nimport DisplayMessagesPage from './components/pages/TodoPage';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/todo\" component={DisplayMessagesPage} />\n          <Route exact path=\"/carousel\" component={CarouselPage} />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}