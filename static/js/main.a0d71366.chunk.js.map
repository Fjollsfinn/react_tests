{"version":3,"sources":["../node_modules/react-pdf/node_modules/pdfjs-dist/build sync","assets/carousel/52146404_2285307134836439_8626864219754594304_n.jpg","assets/carousel/52263511_2128793170500870_6200383275777654784_n.png","assets/carousel/52347519_235610323913102_42497528867848192_n.jpg","assets/carousel/52599222_284619915538111_6737127718170656768_n.jpg","assets/pdfFile/Skywalker.pdf","components/Carousel.js","components/pages/MainPage.js","components/pages/CarouselPage.js","components/Todo.js","components/pages/TodoPage.js","components/useNotification.js","components/SignatureCanvas.js","components/pages/SignatureCanvasPage.js","components/PdfDownload/SkywalkerPdf.jsx","components/PdfDownload/PdfDownloadLink.jsx","components/PdfCanvas/PdfCanvas.jsx","components/pages/PdfViewPage.js","components/Test.js","components/pages/TestsPage.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","__webpack_require__","p","rotationInterval","angle","box","MainPage","react_default","a","createElement","Link","to","Component","Carousel","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRotating","rotationAngle","direction","React","createRef","handleRotate","bind","assertThisInitialized","toggleCarousel","changeDirection","rotate","clearInterval","side","current","console","log","setTimeout","style","transform","concat","transition","setInterval","setState","target","_this2","className","Fab","marginLeft","onClick","KeyboardArrowLeft_default","ref","src","edo1","alt","edo2","edo3","edo4","marginRight","KeyboardArrowRight_default","CarouselPage","components_Carousel","Todo","props","input","messages","handleChange","submitMessage","value","toConsumableArray","onChange","map","message","key","TodoPage","components_Todo","useNotification","enqueueSnackbar","useSnackbar","enqueNotification","_ref","variant","options","objectSpread","preventDuplicate","enqueueInfoNotification","_ref3","_ref3$message","_ref3$options","enqueueAPIErrorNotification","_ref5","response","_ref5$options","data","enqueueSuccessNotification","_ref2","arguments","length","undefined","_ref2$message","_ref2$options","enqueueErrorNotification","_ref4","_ref4$message","_ref4$options","enqueueNotifications","notifications","Array","isArray","forEach","useStyles","makeStyles","theme","canvasBorder","border","canvas","defineProperty","width","height","breakpoints","down","result","spacing","truthy","color","falsy","tooltip","SignatureCanvasComponent","_clsx","_clsx2","_clsx3","_clsx4","_clsx5","_clsx6","classes","_React$useState","useState","_React$useState2","slicedToArray","readySignatureCanvas","setReadySignatureCanvas","_React$useState3","isDawning","isEmpty","_React$useState4","canvasState","setCanvasState","_useNotification","useEffect","handleBegin","useCallback","handleEnd","handleIsEmpty","handleClear","clear","handleToDataURL","toDataURL","getTrimmedCanvas","handleCoppy","navigator","clipboard","writeText","then","catch","document","queryCommandSupported","textarea","textContent","position","body","appendChild","select","execCommand","removeChild","handleToData","toData","handleFromData","fromData","handleFromDataURL","fromDataURL","Grid","container","alignItems","item","build_default","penColor","canvasProps","onBegin","onEnd","Typography","clsx","IconButton","DesktopAccessDisabled_default","Delete_default","Http_default","Button","href","rel","disabled","FileCopy_default","Save_default","Create_default","defaultProps","SignatureCanvasPage","justify","SignatureCanvas","styles","StyleSheet","create","page","backgroundColor","header","margin","padding","display","flexDirection","justifyContent","dataHeader","dataContainer","MyPdf","react_pdf_browser_es","size","downloadButton","borderRadius","&:hover","PdfForm","fetchedData","setFetchedData","update","fetch","headers","Content-Type","json","films","species","starships","vehicles","rest","objectWithoutProperties","error","SkywalkerPdf","fileName","textDecoration","blob","url","loading","pdfjs","GlobalWorkerOptions","workerSrc","version","PdfCanvas","_useState","_useState2","numPages","setNumPages","_useState3","_useState4","pageNumber","entry","file","skywalkerPdf","onLoadSuccess","pdfDownloadLinkWrapper","PdfViewPage","Fragment","PdfDownloadLink","PdfCanvas_PdfCanvas","Test","Kwadrat","wysokosc","szerokosc","name","Bryla","TestsPage","components_Test","link","Navbar","AppBar","NavLink","Footer","App","BrowserRouter","notistack_esm","maxSnack","components_Navbar","Route","exact","path","component","DisplayMessagesPage","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0d71366.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 150;","module.exports = __webpack_public_path__ + \"static/media/52146404_2285307134836439_8626864219754594304_n.005bbf32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/52263511_2128793170500870_6200383275777654784_n.e76aabd4.png\";","module.exports = __webpack_public_path__ + \"static/media/52347519_235610323913102_42497528867848192_n.dac939a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/52599222_284619915538111_6737127718170656768_n.66f9d3dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Skywalker.f198f1a9.pdf\";","import React, { Component } from 'react';\r\nimport '../css/carousel.css';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport IconArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nimport edo1 from '../assets/carousel/52146404_2285307134836439_8626864219754594304_n.jpg';\r\nimport edo2 from '../assets/carousel/52263511_2128793170500870_6200383275777654784_n.png';\r\nimport edo3 from '../assets/carousel/52347519_235610323913102_42497528867848192_n.jpg';\r\nimport edo4 from '../assets/carousel/52599222_284619915538111_6737127718170656768_n.jpg';\r\n\r\nlet rotationInterval, angle, firstRotateTimeout, box;\r\n\r\nclass Carousel extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isRotating: true,\r\n            rotationAngle: -90,\r\n            direction: 'right'\r\n        }\r\n        this.box = React.createRef();\r\n        this.handleRotate = this.handleRotate.bind(this);\r\n        this.toggleCarousel = this.toggleCarousel.bind(this);\r\n        this.changeDirection = this.changeDirection.bind(this);\r\n        this.rotate = this.rotate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleRotate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        clearInterval(rotationInterval);\r\n        this.handleRotate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(rotationInterval);\r\n    }\r\n\r\n    rotate(side) {\r\n        box = this.box.current;\r\n        angle = this.state.rotationAngle;\r\n        console.log('angle before interval: ' + angle);\r\n        firstRotateTimeout = setTimeout(function() {\r\n            box.style.transform = `rotateY(${angle}deg)`;\r\n            box.style.transition = 'transform 2.5s ease'\r\n            angle += side;\r\n        }, 100)\r\n        rotationInterval = setInterval(function() {\r\n            console.log('angle while interval: ' + angle);\r\n            box.style.transform = `rotateY(${angle}deg)`;\r\n            box.style.transition = 'transform 3s ease'\r\n            angle += side;\r\n        }, 4500)\r\n    }\r\n\r\n    handleRotate() {\r\n        clearInterval(rotationInterval);\r\n        if(this.state.isRotating) {\r\n            if (this.state.direction === 'right') {\r\n                this.rotate(-90);\r\n            } else {\r\n                this.rotate(90);\r\n            }\r\n        } else {\r\n            clearInterval(rotationInterval);\r\n        }\r\n    }\r\n\r\n    toggleCarousel(e) {\r\n        this.setState({\r\n            isRotating: !this.state.isRotating,\r\n            rotationAngle: angle\r\n        })\r\n        if (this.state.isRotating) {\r\n            e.target.style.transform = 'translateX(-50%) translateY(-50%) scale(1.5)';\r\n            e.target.style.transition = 'transform .5s ease-in';\r\n        } else {\r\n            e.target.style.transform = 'translateX(-50%) translateY(-50%) scale(1)';\r\n            e.target.style.transition = 'transform .5s ease-in';\r\n        }\r\n    }\r\n\r\n    changeDirection(direction) {\r\n        clearInterval(rotationInterval);\r\n        console.log('angle while clicked: ' + angle);\r\n        if (this.state.direction === 'right' && direction === 'left') {\r\n            angle = angle + 180;\r\n        } else if (this.state.direction === 'left' && direction === 'right') {\r\n            angle = angle - 180;\r\n        }\r\n        this.setState({\r\n            rotationAngle: angle,\r\n            direction: direction\r\n        }, function() {\r\n            console.log(\"change img (f):\" + this.state.rotationAngle + \", direction: \" + this.state.direction);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Fab style={{ marginLeft: '.8rem'}} onClick={ () => this.changeDirection('left')}>\r\n                    <IconArrowLeft />\r\n                </Fab>\r\n                <div className=\"rotating-box\">\r\n                    <div className=\"rotating-box__rb\" ref={this.box}>\r\n                        <div className=\"rotating-box__front\"><img src={edo1} alt=\"edo-photo1\" onClick={this.toggleCarousel} /></div>\r\n                        <div className=\"rotating-box__back\"><img src={edo2} alt=\"edo-photo2\" onClick={this.toggleCarousel} /></div>\r\n                        <div className=\"rotating-box__left\"><img src={edo3} alt=\"edo-photo3\" onClick={this.toggleCarousel} /></div>\r\n                        <div className=\"rotating-box__right\"><img src={edo4} alt=\"edo-photo4\" onClick={this.toggleCarousel} /></div>\r\n                    </div>\r\n                </div>\r\n                <Fab style={{ marginRight: '.8rem'}} onClick={ () => this.changeDirection('right')}>\r\n                    <IconArrowRight />\r\n                </Fab>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MainPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This is only my testing page. To see some cool stuff in REACT click one of buttons below.</h2>\r\n                <Link to=\"/react_tests/todo\">\r\n                    <button> Go to simple TODO list </button>\r\n                </Link>\r\n                <Link to=\"/react_tests/carousel\">\r\n                    <button> Go to React Carousel </button>\r\n                </Link>\r\n                <Link to=\"/react_tests/signature\">\r\n                    <button> Go to Signature Canvas</button>\r\n                </Link>\r\n                <Link to=\"/react_tests/pdf-document-tests\">\r\n                    <button> Go to PDF Tests</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Carousel from '../Carousel';\r\n\r\nclass CarouselPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This is React Carousel. Click on img to see more cool stuff.</h2>\r\n                <Carousel />\r\n                <Link to=\"/react_tests\">\r\n                    <button> Back to main page </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CarouselPage;","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        input: '',\r\n        messages: []\r\n      }\r\n      this.input = React.createRef()\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.submitMessage = this.submitMessage.bind(this);\r\n    }\r\n    // add handleChange() and submitMessage() methods here\r\n    handleChange(e) {\r\n      this.setState({\r\n        input: e.target.value\r\n      })\r\n    }\r\n  \r\n    submitMessage() {\r\n      this.setState({\r\n        messages: [...this.state.messages, this.state.input]\r\n      }, function() {\r\n        this.input.current.value = ''\r\n        this.setState({\r\n          input: ''\r\n        })\r\n      })\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2>Type in a new Message:</h2>\r\n          <input onChange={this.handleChange} ref={this.input}/>\r\n          <button onClick={this.submitMessage}>Add message</button>\r\n          <ul>{this.state.messages.map(message => <li key={message}>{message}</li>)}</ul>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default Todo;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Todo from '../Todo';\r\n\r\nclass TodoPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This is simple react TODO list. Type any todo task and hit the button.</h2>\r\n                <Todo />\r\n                <Link to=\"/react_tests\">\r\n                    <button> Back to main page </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoPage;","import { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction useNotification() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  function enqueNotification({ message, variant, options }) {\r\n    enqueueSnackbar(message, {\r\n      preventDuplicate: true,\r\n      variant,\r\n      ...options,\r\n    });\r\n  }\r\n\r\n  function enqueueSuccessNotification({ message = '', options = {} } = {}) {\r\n    const variant = 'success';\r\n    enqueNotification({ message, variant, options });\r\n  }\r\n\r\n  function enqueueInfoNotification({ message = '', options = {} }) {\r\n    const variant = 'info';\r\n    enqueNotification({ message, variant, options });\r\n  }\r\n\r\n  function enqueueErrorNotification({ message = '', options = {} } = {}) {\r\n    const variant = 'error';\r\n    enqueNotification({ message, variant, options });\r\n  }\r\n\r\n  function enqueueAPIErrorNotification({ response, options = {} }) {\r\n    const { data } = response || {};\r\n    const variant = 'error';\r\n    const message = (data && data.message) || \"Unknown Error\";\r\n\r\n    enqueNotification({ message, variant, options });\r\n  }\r\n\r\n  function enqueueNotifications(notifications = []) {\r\n    if (Array.isArray(notifications)) {\r\n      notifications.forEach(enqueueInfoNotification);\r\n    }\r\n  }\r\n\r\n  return {\r\n    enqueueAPIErrorNotification,\r\n    enqueueSuccessNotification,\r\n    enqueueInfoNotification,\r\n    enqueueErrorNotification,\r\n    enqueueNotifications,\r\n  };\r\n}\r\n\r\nexport default useNotification;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SignatureCanvas from 'react-signature-canvas'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DesktopAccessDisabledIcon from '@material-ui/icons/DesktopAccessDisabled';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HttpIcon from '@material-ui/icons/Http';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport useNotification from './useNotification';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvasBorder: {\r\n        border: '3px #6aab8d dashed'\r\n    },\r\n    canvas: {\r\n        width: 500, \r\n        height: 200,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 360, \r\n            height: 200,\r\n        }\r\n    },\r\n    result: {\r\n        marginLeft: theme.spacing(3), \r\n    },\r\n    truthy: {\r\n        color: '#6aab8d', \r\n    },\r\n    falsy: {\r\n        color: 'red', \r\n    },\r\n    tooltip: {\r\n        color: 'grey',\r\n    },\r\n}));\r\n\r\nconst SignatureCanvasComponent = () => {\r\n    const classes = useStyles();\r\n    const canvas = React.createRef();\r\n    const [readySignatureCanvas, setReadySignatureCanvas] = React.useState(false);\r\n    const [canvasState, setCanvasState] = React.useState({\r\n        isDawning: false,\r\n        isEmpty: true,\r\n    });\r\n    const { enqueueSuccessNotification, enqueueErrorNotification } = useNotification();\r\n    \r\n    React.useEffect(() => {\r\n        if (canvas && canvas.current) {\r\n            console.log(canvas)\r\n            setReadySignatureCanvas(canvas.current);\r\n        }\r\n    },[canvas, canvas.current]) \r\n\r\n    React.useEffect(() => {\r\n        console.log(canvasState);\r\n    },[canvasState]) \r\n\r\n    const handleBegin = React.useCallback(() => {\r\n        setCanvasState({...canvasState, isDawning: true, isEmpty: false});\r\n    },[canvasState])\r\n\r\n    const handleEnd = React.useCallback(() => {\r\n        setCanvasState({...canvasState, isDawning: false});\r\n    },[canvasState])\r\n\r\n    const handleIsEmpty = React.useCallback(() => {\r\n        if(readySignatureCanvas) {\r\n            const isEmpty = readySignatureCanvas.isEmpty();\r\n            setCanvasState({...canvasState, isEmpty})\r\n        }\r\n    },[readySignatureCanvas])\r\n\r\n    const handleClear = React.useCallback(() => {\r\n        if(readySignatureCanvas) {\r\n            readySignatureCanvas.clear();\r\n            setCanvasState({ isDawning: false, isEmpty: true})\r\n        }\r\n    },[readySignatureCanvas])\r\n\r\n    const handleToDataURL = React.useCallback(() => {\r\n        if(readySignatureCanvas) {\r\n            const trimmedCanvas = readySignatureCanvas.getTrimmedCanvas();\r\n            const toDataURL = trimmedCanvas.toDataURL('image/png');\r\n            setCanvasState({...canvasState, toDataURL})\r\n            readySignatureCanvas.clear();\r\n        }\r\n    },[readySignatureCanvas])\r\n\r\n    const handleCoppy = React.useCallback(() => {\r\n        if(canvasState.toDataURL) {\r\n            if(navigator && navigator.clipboard) {\r\n                return navigator.clipboard.writeText(canvasState.toDataURL)\r\n                    .then(() => enqueueSuccessNotification({message: 'Coppied to clipboard.'}))\r\n                    .catch(() => enqueueErrorNotification({message: \"Smth gone wrong. Not coppied.\"}))\r\n            } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\r\n                var textarea = document.createElement(\"textarea\");\r\n                textarea.textContent = canvasState.toDataURL;\r\n                textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in Microsoft Edge.\r\n                document.body.appendChild(textarea);\r\n                textarea.select();\r\n                try {\r\n                    enqueueSuccessNotification({message: 'Coppied to clipboard.'})\r\n                    return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\r\n                }\r\n                catch (e) {\r\n                    enqueueErrorNotification({message: \"Smth gone wrong. Not coppied.\"})\r\n                    return false;\r\n                }\r\n                finally {\r\n                    document.body.removeChild(textarea);\r\n                }\r\n            }\r\n        }\r\n    },[navigator, canvasState])\r\n\r\n    const handleToData = React.useCallback(() => {\r\n        if(readySignatureCanvas) {\r\n            const toData = readySignatureCanvas.toData();\r\n            setCanvasState({...canvasState, toData});\r\n            enqueueSuccessNotification({message: 'Data has been saved.'})\r\n            readySignatureCanvas.clear();\r\n        }\r\n    },[readySignatureCanvas, canvasState])\r\n\r\n    const handleFromData = React.useCallback(() => {\r\n        if(readySignatureCanvas) {\r\n            readySignatureCanvas.fromData(canvasState.toData);\r\n            setCanvasState({...canvasState, fromData: true})\r\n            enqueueSuccessNotification({message: 'Data has been written from saved data.'})\r\n        }\r\n    },[readySignatureCanvas, canvasState])\r\n\r\n    const handleFromDataURL = React.useCallback(() => {\r\n        if(readySignatureCanvas) {\r\n            readySignatureCanvas.fromDataURL(canvasState.toDataURL);\r\n            setCanvasState({...canvasState, fromDataURL: true,})\r\n            enqueueSuccessNotification({message: 'Data has been written from generated image.'})\r\n        }\r\n    },[readySignatureCanvas, canvasState])\r\n\r\n    return  (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Grid item>\r\n                <div className={classes.canvasBorder}>\r\n                    <SignatureCanvas\r\n                    ref={canvas} \r\n                    penColor='#000000'\r\n                    canvasProps={{className: classes.canvas}} \r\n                    onBegin={handleBegin}\r\n                    onEnd={handleEnd}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant=\"h6\">Signature Canvas functions</Typography>\r\n                <Grid container direction=\"column\" spacing={0.5}>\r\n                    <Grid item container alignItems=\"center\">\r\n                        <Typography variant=\"body1\">is Drawning: </Typography>\r\n                        <Typography \r\n                            variant=\"body1\" \r\n                            className={clsx({\r\n                                [classes.result]: true,\r\n                                [classes.truthy]: canvasState && canvasState.isDawning,\r\n                                [classes.falsy]: canvasState && !canvasState.isDawning\r\n                            })}>\r\n                                {canvasState && canvasState.isDawning ? 'true' : 'false'}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container alignItems=\"center\">\r\n                        <IconButton onClick={handleIsEmpty}>\r\n                            <DesktopAccessDisabledIcon color=\"primary\"/>\r\n                        </IconButton>\r\n                        <Typography variant=\"body1\">isEmpty()</Typography>\r\n                        <Typography \r\n                            variant=\"body1\" \r\n                            className={clsx({\r\n                                [classes.result]: true,\r\n                                [classes.truthy]: canvasState && canvasState.isEmpty,\r\n                                [classes.falsy]: canvasState && !canvasState.isEmpty\r\n                            })}>\r\n                                {canvasState && canvasState.isEmpty ? 'true' : 'false'}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container alignItems=\"center\">\r\n                        <IconButton onClick={handleClear}>\r\n                            <DeleteIcon color=\"primary\"/>\r\n                        </IconButton>\r\n                        <Typography variant=\"body1\">clear() & clear canvas state</Typography>\r\n                        <Typography \r\n                            variant=\"body1\" \r\n                            className={clsx({\r\n                                [classes.result]: true,\r\n                                [classes.truthy]: canvasState && canvasState.isEmpty,\r\n                                [classes.falsy]: canvasState && !canvasState.isEmpty\r\n                            })}>\r\n                                {canvasState && canvasState.isEmpty ? 'cleared' : 'dirty'}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container alignItems=\"center\">\r\n                        <IconButton onClick={handleToDataURL}>\r\n                            <HttpIcon color=\"primary\"/>\r\n                        </IconButton>\r\n                        <Typography variant=\"body1\">toDataURL()</Typography>\r\n                    </Grid>\r\n                    {canvasState.toDataURL && (\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Typography variant=\"body1\" className={classes.truthy}>Image has been generated</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleCoppy}>Coppy to clipboard</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"body1\">, then go to <a href=\"https://codebeautify.org/base64-to-image-converter\" target=\"_blank\" rel=\"noopener noreferrer\">GENERATOR</a> and paste it.</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                    <Grid item container alignItems=\"center\">\r\n                        <IconButton onClick={handleFromDataURL} disabled={!canvasState.toDataURL}>\r\n                            <FileCopyIcon color={!canvasState.toDataURL ? 'initial' : 'primary'}/>\r\n                        </IconButton>\r\n                        <Typography variant=\"body1\">fromDataURL()</Typography>\r\n                        <Typography \r\n                            variant=\"body1\" \r\n                            className={clsx({\r\n                                [classes.result]: true,\r\n                                [classes.truthy]: canvasState && canvasState.fromDataURL,\r\n                                [classes.tooltip]: canvasState && !canvasState.toDataURL,\r\n                            })}>\r\n                                {canvasState && canvasState.fromDataURL ? 'Data has been written from generated base64 image' : canvasState && canvasState.toDataURL ? '' : 'Generate image at first'}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container alignItems=\"center\">\r\n                        <IconButton onClick={handleToData}>\r\n                            <SaveIcon color=\"primary\"/>\r\n                        </IconButton>\r\n                        <Typography variant=\"body1\">toData()</Typography>\r\n                        <Typography \r\n                            variant=\"body1\" \r\n                            className={clsx({\r\n                                [classes.result]: true,\r\n                                [classes.truthy]: canvasState && canvasState.toData,\r\n                            })}>\r\n                                {canvasState && canvasState.toData && 'Data saved'}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item container alignItems=\"center\">\r\n                        <IconButton onClick={handleFromData} disabled={!canvasState.toData}>\r\n                            <CreateIcon color={!canvasState.toData ? 'initial' : 'primary'}/>\r\n                        </IconButton>\r\n                        <Typography variant=\"body1\">fromData()</Typography>\r\n                        <Typography \r\n                            variant=\"body1\" \r\n                            className={clsx({\r\n                                [classes.result]: true,\r\n                                [classes.truthy]: canvasState && canvasState.fromData,\r\n                                [classes.tooltip]: canvasState && !canvasState.toData,\r\n                            })}>\r\n                                {canvasState && canvasState.fromData ? 'Data has been written from saved data.' : canvasState && canvasState.toData ? '' : 'Save data at first'}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n};\r\n\r\nSignatureCanvasComponent.propTypes = {\r\n};\r\n\r\nSignatureCanvasComponent.defaultProps = {\r\n};\r\n\r\nexport default SignatureCanvasComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SignatureCanvas from '../SignatureCanvas';\r\n\r\nconst SignatureCanvasPage = () => {\r\n    return (\r\n        <div>\r\n            <h2>Welcome on Signature Canvas Page!</h2>\r\n            <Grid container justify=\"center\">\r\n                <Grid item>\r\n                    <SignatureCanvas />\r\n                </Grid>\r\n            </Grid>\r\n            <Link to=\"/react_tests\">\r\n                <button>\r\n                    Back to main page\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default SignatureCanvasPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    backgroundColor: '#E4E4E4',\r\n  },\r\n  header: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    color: '#fff',\r\n    backgroundColor: '#000'\r\n  },\r\n  dataHeader: {\r\n    margin: 10,\r\n  },\r\n  dataContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  data: {\r\n    margin: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  }\r\n});\r\n\r\nconst MyPdf = (data) => {\r\n\r\n  return  (\r\n    <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n            <View style={styles.header}>\r\n                <Text>My example PDF</Text>\r\n            </View>\r\n            <View style={styles.dataHeader}>\r\n                <Text>Data fetched from SWAPI:</Text>\r\n            </View>\r\n            {data && data.data && (\r\n              <View style={styles.data}>\r\n                <View style={styles.dataContainer}>\r\n                  {data.data && Object.keys(data.data).map(key => {\r\n                      return (\r\n                          <Text key={key}>{`${key}: ${data.data[key]}`}</Text>\r\n                          )\r\n                        })}\r\n                </View>\r\n              </View>\r\n            )}\r\n        </Page>\r\n  </Document>\r\n  )\r\n};\r\n\r\nMyPdf.propTypes = {\r\n  data: PropTypes.shape({})\r\n};\r\n\r\nMyPdf.defaultProps = {\r\n  data: {}\r\n};\r\n\r\nexport default MyPdf;","import React from 'react';\r\nimport { PDFDownloadLink  } from '@react-pdf/renderer';\r\nimport SkywalkerPdf from './SkywalkerPdf';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  downloadButton: {\r\n      backgroundColor: '#3f51b5 !important',\r\n      border: '#3f51b5 1px !important',\r\n      borderRadius: '5px',\r\n      color: '#fff !important',\r\n      width: '100% !important',\r\n      height: '100% !important',\r\n      '&:hover': {\r\n        backgroundColor: '#303f9f !important',\r\n      }\r\n  }\r\n}));\r\n\r\nconst PdfForm = () => {\r\n  const classes = useStyles();\r\n  const [fetchedData, setFetchedData] = React.useState(null);\r\n    const [update] = React.useState(0);\r\n    React.useEffect(() => {\r\n        fetch('https://swapi.dev/api/people/1/', {headers: { 'Content-Type': 'application/json'},})\r\n            .then(response =>response.json())\r\n            .then(data => {\r\n                const {films, species, starships, vehicles, ...rest } = data;\r\n                setFetchedData(rest);\r\n            })\r\n            .catch(error => console.log(error))\r\n    },[update])\r\n\r\n  return  (\r\n      <div variant=\"contained\" color=\"primary\">\r\n        {\r\n           fetchedData ? (\r\n            <PDFDownloadLink \r\n              document={<SkywalkerPdf data={fetchedData} />}\r\n              fileName=\"Skywalker.pdf\"\r\n              style={{\r\n                textDecoration: \"none\",\r\n                padding: \"10px\",\r\n                color: \"#4a4a4a\",\r\n                backgroundColor: \"#f2f2f2\",\r\n                border: \"1px solid #4a4a4a\"\r\n              }}\r\n              className={classes.downloadButton}\r\n            >\r\n              {({ blob, url, loading, error }) => \r\n                loading ? \"Loading document...\" : \"Download PDF\"\r\n              }\r\n            </PDFDownloadLink >\r\n          )\r\n          : (\r\n            <div>Loading Pdf...</div>\r\n          )\r\n        }\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default PdfForm;","import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport skywalkerPdf from '../../assets/pdfFile/Skywalker.pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction PdfCanvas() {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Document\r\n        file={skywalkerPdf}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>Page {pageNumber} of {numPages}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default PdfCanvas;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PdfDownloadLink from '../PdfDownload/PdfDownloadLink';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PdfCanvas from '../PdfCanvas/PdfCanvas';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pdfDownloadLinkWrapper: {\r\n        padding: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst PdfViewPage = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Welcome on PDF Test Page!</h2>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Typography variant=\"body1\">1. PdfDownloadLink should let you download pdf with dynamic data from <a href=\"https://swapi.dev/documentation\">SWAPI</a></Typography>\r\n                <div className={classes.pdfDownloadLinkWrapper}>\r\n                    <PdfDownloadLink />\r\n                </div>\r\n                <Typography variant=\"body1\">2. PdfCanvas should render PDF file on canvas </Typography>\r\n                <PdfCanvas />\r\n                <Grid item>\r\n                    <Link to=\"/react_tests\">\r\n                        <button>\r\n                            Back to main page\r\n                        </button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )   \r\n}\r\n\r\nexport default PdfViewPage;","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h3>I'm test.</h3>\r\n        )\r\n    }\r\n}\r\n\r\nclass Bryla {\r\n    constructor(wysokosc, szerokosc) {\r\n        this.wysokosc = wysokosc;\r\n        this.szerokosc = szerokosc;\r\n    }\r\n}\r\n\r\nclass Kwadrat extends Bryla {\r\n    constructor(wysokosc, szerokosc) {\r\n        super(wysokosc, szerokosc)\r\n        this.name = 'Kwadrat'\r\n    }\r\n}\r\n\r\nconst kwadrat = new Kwadrat(10, 10)\r\n\r\nexport default Test;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Test from '../Test'\r\n\r\nclass TestsPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>I'm only for test purposes here!</h2>\r\n                <Test />\r\n                <Link to=\"/react_tests\">\r\n                    <button>\r\n                        Back to main page\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default TestsPage;","import React from 'react';\r\nimport { NavLink  } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  link: {\r\n      color: '#fff'\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Grid container justify=\"space-around\">\r\n                <Grid item>\r\n                    <NavLink className={classes.link} to=\"/react_tests\">\r\n                        <Typography variant=\"body1\">HOME</Typography>\r\n                    </NavLink >\r\n                </Grid>\r\n                <Grid item>\r\n                    <NavLink className={classes.link} to=\"/react_tests/todo\">\r\n                        <Typography variant=\"body1\">TODO</Typography>\r\n                    </NavLink >\r\n                </Grid>\r\n                <Grid item>\r\n                    <NavLink className={classes.link} to=\"/react_tests/carousel\">\r\n                    <Typography variant=\"body1\">CAROUSEL</Typography>\r\n                    </NavLink >\r\n                </Grid>\r\n                <Grid item>\r\n                    <NavLink className={classes.link} to=\"/react_tests/signature\">\r\n                        <Typography variant=\"body1\">SIGNATURE CANVAS</Typography>\r\n                    </NavLink >\r\n                </Grid>\r\n                <Grid item>\r\n                    <NavLink className={classes.link} to=\"/react_tests/pdf-document-tests\">\r\n                        <Typography variant=\"body1\">PDF TESTS</Typography>\r\n                    </NavLink >\r\n                </Grid>\r\n                <Grid item>\r\n                    <NavLink className={classes.link} to=\"/react_tests/tests\">\r\n                        <Typography variant=\"body1\">TESTS</Typography>\r\n                    </NavLink >\r\n                </Grid>\r\n            </Grid>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nimport '../css/footer.css';\r\n\r\nclass Footer extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"footer-flex\">\r\n                <h3>THIS IS <a href=\"https://github.com/Fjollsfinn\">FJOLLSFINN</a> TESTING PAGE.</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport MainPage from './components/pages/MainPage';\r\nimport CarouselPage from './components/pages/CarouselPage';\r\nimport DisplayMessagesPage from './components/pages/TodoPage';\r\nimport SignatureCanvasPage from './components/pages/SignatureCanvasPage';\r\nimport PdfViewPage from './components/pages/PdfViewPage';\r\nimport TestsPage from './components/pages/TestsPage';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <SnackbarProvider maxSnack={3}>\r\n            <Navbar />\r\n            <Route exact path=\"/react_tests\" component={MainPage} />\r\n            <Route exact path=\"/react_tests/todo\" component={DisplayMessagesPage} />\r\n            <Route exact path=\"/react_tests/carousel\" component={CarouselPage} />\r\n            <Route exact path=\"/react_tests/signature\" component={SignatureCanvasPage} />\r\n            <Route exact path=\"/react_tests/pdf-document-tests\" component={PdfViewPage} />\r\n            <Route exact path=\"/react_tests/tests\" component={TestsPage} />\r\n            <Footer />\r\n          </SnackbarProvider>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}